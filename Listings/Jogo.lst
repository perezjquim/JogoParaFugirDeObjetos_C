C51 COMPILER V9.56.0.0   JOGO                                                              05/23/2017 01:09:36 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE JOGO
OBJECT MODULE PLACED IN .\Objects\Jogo.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Jogo.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\Jogo
                    -.lst) TABS(2) OBJECT(.\Objects\Jogo.obj)

line level    source

   1          #include <reg51.h>
   2          #include <stdio.h>
   3          #include <string.h>
   4          #include <stdlib.h>
   5          
   6          sbit Input = P3;
   7          sbit Esquerda = P3^2;
   8          sbit Direita = P3^3;
   9          #define DisplayX P2
  10          #define DisplayY P1
  11          #define NR_LINHAS 7   // N?mero total de linhas
  12          #define TEMPO_HIGH  0x3c    // Byte mais significativo do timer 0 - 50 ms (12MHz)
  13          #define TEMPO_LOW 0xaf    // Byte menos significativo do timer 0 - 50 ms (12MHz)
  14          #define TEMPO_1SEGUNDO 20   // Tempo do timer 0 para medir 1 s (20x50 ms)
  15          #define TEMPO_T1 0x70     //0x70 Tempo do timer 1 - 112 us (12MHz)
  16          #define NR_IMAGENS 10   // N?mero de imagens
  17          #define VAZIO 0xFF
  18          #define INTERRUPCOES_ESTADO_INICIAL 143
  19          
  20          #define X_MIN 0
  21          #define X_MAX 4
  22          #define Y_MIN 0
  23          #define Y_MAX 6
  24          #define X_INICIAL 2
  25          #define Y_INICIAL 0
  26          #define VIDAS_INICIAL 2
  27          #define TEMPO_NIVEL 9
  28          #define DIFICULDADE1 1500
  29          #define DIFICULDADE2 1200
  30          #define DIFICULDADE3 900
  31          #define DIFICULDADE4 600
  32          #define DIFICULDADE5 50
  33          
  34          
  35          char ImagemAtual;     // Vari?vel com o n?mero da imagem
  36          char LinhaAtual;      // Vari?vel para guardar o n?mero de linha
  37          char TempoAntesDeRedesenhar;      // Vari?vel para medir 1 s (20x50 ms)
  38          char ImagemX[NR_LINHAS];  // Display com 7 valores
  39          char ObstaculosInicio;
  40          
  41          int vidasRestantes;   //vidas restantes do jogador
  42          int tempoRestante;            //tempo restante para o nível acabar
  43          
  44          static char Imagens[NR_IMAGENS][NR_LINHAS] = 
  45          {{3, 2, 1, 0, 0, 0, 4},   // Imagem 0
  46          {0, 0, 0, 0, 0, 0, 4},    // Imagem 1
  47          {0, 0, 0, 0, 0, 0, 4},    // Imagem 2
  48          {0, 0, 0, 0, 0, 0, 4},    // Imagem 3
  49          {0, 0, 0, 0, 0, 0, 4},    // Imagem 1
  50          {0, 0, 0, 0, 0, 0, 4},    // Imagem 2
  51          {0, 0, 0, 0, 0, 0, 4},    // Imagem 3
  52          {0, 0, 0, 0, 0, 0, 4},    // Imagem 1
  53          {0, 0, 0, 0, 0, 0, 4},    // Imagem 2
  54          {0, 0, 0, 0, 0, 0, 4}};   // Imagem 3
C51 COMPILER V9.56.0.0   JOGO                                                              05/23/2017 01:09:36 PAGE 2   

  55          static char ImagemY[NR_LINHAS] = 
  56          {254, 253, 251, 247, 239, 223, 191};
  57          
  58          
  59          void redesenharEcra()
  60          {
  61   1         int i;       
  62   1         for (i = 0; i < NR_LINHAS; i++)
  63   1            ImagemX[i] = Imagens[ImagemAtual][i];
  64   1      }
  65          
  66          void moverObstaculos()
  67          {
  68   1        int i;
  69   1        char obstaculo;
  70   1        for (i = NR_LINHAS - 2; i > 0 ; i--)
  71   1            ImagemX[i] = ImagemX[i-1];
  72   1        ImagemX[ObstaculosInicio] = 0;
  73   1        ObstaculosInicio++;
  74   1      }
*** WARNING C280 IN LINE 69 OF Jogo.c: 'obstaculo': unreferenced local variable
  75          void verificarObstaculos() interrupt 1
  76          {
  77   1         TH0 = TEMPO_HIGH;    // Timer 0 = 50 ms
  78   1         TL0 = TEMPO_LOW;   // Verifica se j? passou 1 segundo 
  79   1         TempoAntesDeRedesenhar--;      
  80   1         if (TempoAntesDeRedesenhar == 0)   // Verifica se o tempo terminou
  81   1         {
  82   2            TempoAntesDeRedesenhar = TEMPO_1SEGUNDO;    // Actualiza a vari?vel tempo
  83   2            moverObstaculos();
  84   2         }
  85   1      }
  86          
  87          void varrerDisplay(void) interrupt 3
  88          {
  89   1         DisplayY = VAZIO;      // Desliga todas as linhas de sa?da
  90   1         DisplayX = ImagemX[LinhaAtual];  // Mostra a linha
  91   1         DisplayY = ImagemY[LinhaAtual];  // Activa a linha
  92   1         LinhaAtual++;      // Pr?xima linha
  93   1         if (LinhaAtual == NR_LINHAS)   // Verifica se ? a ?ltima linha
  94   1          LinhaAtual = 0;   // Para a linha inicial
  95   1      }
  96          
  97          ////////////////////////////////////////////////////////////////////////////
  98          ////////////////////////////////////////////////////////////////////////////
  99          void inicializarDisplay(void)
 100          {
 101   1         ImagemAtual = 0;     // Imagem inicial
 102   1         redesenharEcra();      // Chama rotina para mostrar imagem no display
 103   1         ObstaculosInicio = 0;
 104   1      }
 105          
 106          void ligarInterrupcoes(void)
 107          {
 108   1         TMOD = 33;     // Timer 0 de 16 bits - #00100001b
 109   1         TH0 = TEMPO_HIGH;      // Timer 0 = 50 ms
 110   1         TL0 = TEMPO_LOW; 
 111   1         TH1 = TEMPO_T1;      // Timer 1 = 112 us
 112   1         TL1 = TEMPO_T1; 
 113   1         TempoAntesDeRedesenhar = TEMPO_1SEGUNDO;       // Inicializa vari?vel para medir 1 s
 114   1         IP = 0;        // N?o altera as prioridades
 115   1         IE = INTERRUPCOES_ESTADO_INICIAL;      // Activa as interrup??es - #10001111b:
C51 COMPILER V9.56.0.0   JOGO                                                              05/23/2017 01:09:36 PAGE 3   

 116   1         IT0 = 1;     // Ext0 detectada na transi??o descendente
 117   1         IT1 = 1;     // Ext1 detectada na transi??o descendente
 118   1         TR0 = 1;     // Inicia timer 0
 119   1         TR1 = 1;     // Inicia timer 1
 120   1         LinhaAtual = 0;          // Indica que ? para mostrar a primeira linha
 121   1         Input = VAZIO;     // P3 ? uma porta de entrada
 122   1      }
 123          /////////////////////////////////////////////////////////////
 124          ////////////////////////////////////////////////////////////////////////////
 125          
 126          void verificarControlos(void)
 127          {
 128   1          if(!Esquerda)       //Se for clicado para ir para a esquerda
 129   1          {
 130   2      //      if(px > X_MIN)    //Se não tiver no limite esquerdo do DisplayY
 131   2      //        moverJogadorEsquerda(); //Anda para a esquerda
 132   2            while(!Esquerda) {}   //Espera o 'largar' do botão
 133   2          }
 134   1          if(!Direita)        //Se for clicado para ir para a direita
 135   1          {
 136   2      //      if(px < X_MAX)    //Se não tiver no limite direito do DisplayY
 137   2      //        moverJogadorDireita();  //Anda para a direita
 138   2            while(!Direita) {}    //Espera o 'largar' do botão
 139   2          }
 140   1      }
 141          
 142          void verificarVidasJogador(void)
 143          {
 144   1      //  if(estaLigado(px,Y_MIN+1))
 145   1          vidasRestantes--;
 146   1      }
 147          
 148          void jogar(double dificuldade)
 149          {
 150   1        vidasRestantes = VIDAS_INICIAL;   //vidas restantes do jogador é inicializada
 151   1        tempoRestante = TEMPO_NIVEL;
 152   1      
 153   1        //inicializarJogador(); //o jogador é desenhado no DisplayY
 154   1      
 155   1        //Ciclo do jogo propriamente dito
 156   1        while(vidasRestantes && tempoRestante)  //Enquanto que houver vidas restantes
 157   1        {
 158   2          //verificarControlos();       //verifica se é clicado para ir para a esquerda ou para a direita (fazendo o 
             -respetivo movimento)
 159   2          //moverObstaculos();          //desenha novos objetos e arrasta os atuais para baixo
 160   2          //verificarVidasJogador();    //verifica se o jogador bate num obstáculo (decrementando uma vida nesse cas
             -o)
 161   2          //delay(dificuldade);
 162   2          tempoRestante--;
 163   2        }
 164   1        
 165   1        if(vidasRestantes)
 166   1          return;
 167   1        
 168   1        //showGameOver();
 169   1        
 170   1      }
*** WARNING C280 IN LINE 148 OF Jogo.c: 'dificuldade': unreferenced local variable
 171          
 172          void main(void)
 173          {
 174   1        inicializarDisplay();
C51 COMPILER V9.56.0.0   JOGO                                                              05/23/2017 01:09:36 PAGE 4   

 175   1        ligarInterrupcoes();
 176   1        
 177   1        jogar(DIFICULDADE1);      //Nível 1 do jogo
 178   1        jogar(DIFICULDADE2);      //Nível 2 do jogo
 179   1        jogar(DIFICULDADE3);      //Nível 3 do jogo
 180   1        jogar(DIFICULDADE4);      //Nível 4 do jogo
 181   1        jogar(DIFICULDADE5);      //Nível 5 do jogo
 182   1      
 183   1        for(;;);
 184   1      }
 185          /*******************************************************************************/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    311    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     92       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
