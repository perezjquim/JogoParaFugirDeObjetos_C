C51 COMPILER V9.56.0.0   JOGO                                                              06/02/2017 10:38:51 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE JOGO
OBJECT MODULE PLACED IN .\Objects\Jogo.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Jogo.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND CODE NOCOND PRINT(.\L
                    -istings\Jogo.lst) TABS(2) OBJECT(.\Objects\Jogo.obj)

line level    source

   1          // Projeto 3 de Arquitetura de Computadores
   2          // Jogo para fugir de objetos (C)
   3          // Manuel Joaquim Andrade Sousa Perez, 2029015
   4          // Cláudio Ascenso Sardinha, 2030215
   5          
   6          /*  Livrarias */
   7          #include <reg51.h>
   8          #include <stdio.h>
   9          #include <stdlib.h>
  10          /**************/
  11          
  12          /*  Portas  */
  13          sbit Input = P3;
  14          #define DisplayX P2
  15          #define DisplayY P1
  16          /************/
  17          
  18          /* Constantes auxiliares (microcontrolador) */
  19          #define TEMPO_T0_HIGH 0x3C                  // Byte mais significativo do timer 0 - 50 ms (12MHz)
  20          #define TEMPO_T0_LOW  0xAF                    // Byte menos significativo do timer 0 - 50 ms (12MHz)
  21          #define TEMPO_T1 0x70                     // 0x70 Tempo do timer 1 - 112 us (12MHz)
  22          #define VAZIO 0xFF                        // Porta vazia (tudo desligado)
  23          #define INTERRUPCOES_SETUP 143    // Estado das interrupções ao ser corrido o programa
  24          /********************************************/
  25          
  26          /*  Constantes auxiliares (jogo)  */
  27          #define IMAGEM_GAMEOVER 5           // ID da imagem do gameover
  28          #define IMAGEM_VICTORY 6              // ID da imagem da vitória
  29          #define NR_IMAGENS 7          // Número de imagens
  30          #define NR_LINHAS 7           // Número total de linhas
  31          #define POS_JOGADOR 6         // Coordenada Y do jogador (última linha)
  32          #define POS_JOGADOR_INICIAL 4         // Posição inicial do jogador (no meio da linha)
  33          #define VIDAS_INICIAL 4       // Nº de vidas para o jogador (3 vidas)
  34          #define DIFICULDADE1 5        // Velocidade a que descem os obstáculos (dificuldade)
  35          #define DIFICULDADE2 4        // Velocidade a que descem os obstáculos (dificuldade)
  36          #define DIFICULDADE3 3      // Velocidade a que descem os obstáculos (dificuldade)
  37          #define DIFICULDADE4 2      // Velocidade a que descem os obstáculos (dificuldade)
  38          #define DIFICULDADE5 1        // Velocidade a que descem os obstáculos (dificuldade)
  39          #define LIMITE_X_DIREITA 1    // Limite direito do display em relação ao X
  40          #define LIMITE_X_ESQUERDA 16  // Limite esquerdo do display em relação ao X
  41          #define LINHA_VAZIA 0         // Representa uma linha vazia (imagem com os LEDs todos desligados)
  42          /**********************************/
  43          
  44          /*  Variáveis do jogo */
  45          char LinhaAtual;            // Variável para guardar o número de linha
  46          char ImagemDisplay[NR_LINHAS];    // Display com 7 valores
  47          
  48          char VidasRestantes;        // Vidas restantes do jogador
  49          char TempoObstaculos;       // Tempo (restante) antes de descerem (novamente) os obstáculos
  50          char DificuldadeAtual;      // Dificuldade atual do jogo (tempo estipulado para a frequência com que os obstá
             -culos vão descendo)
  51          char ObstaculosInicio;      // Limite superior dos obstáculos
  52          char NivelAtual = 1;        // Nível atual do jogo (que representa a imagem do vetor a ser desenhada)
  53          /**********************/
C51 COMPILER V9.56.0.0   JOGO                                                              06/02/2017 10:38:51 PAGE 2   

  54          
  55          /*  Conjunto de imagens do jogo */
  56          static char Imagens[NR_IMAGENS][NR_LINHAS - 1] = 
  57          {{3, 2, 1, 6, 0, 0},    // Nível 1
  58          {4, 3, 2, 6, 0, 0},   // Nível 2
  59          {7, 6, 2, 6, 0, 0},   // Nível 3
  60          {8, 2, 3, 6, 0, 0},   // Nível 4
  61          {1, 4, 4, 6, 0, 0},   // Nível 5
  62          {17,10,4,10,17,0},      // Game over
  63          {31,31,31,31,31,31}}; // Vitória
  64          /********************************/
  65          
  66          /*  Vetor para ativar as linhas do display  */
  67          static char ImagemLinha[NR_LINHAS] = 
  68          {254, 253, 251, 247, 239, 223, 191};
  69          /********************************************/
  70          
  71          /* Função para desenhar uma nova imagem no ecrã */
  72          void desenharNovaImagem(char NovaImagem)
  73          {
  74   1         int i;       
  75   1         for (i = 0; i < POS_JOGADOR; i++)
  76   1            ImagemDisplay[i] = Imagens[NovaImagem][i];    //Atualiza a linha com a nova imagem
  77   1      }
  78          /************************************************/
  79          
  80          /* Função para mover todos os obstáculos (uma "casa" para baixo)  */
  81          void moverObstaculos()
  82          {
  83   1        int i;
  84   1        for (i = POS_JOGADOR - 1; i > ObstaculosInicio ; i--)     //Percorre todas as linhas
  85   1            ImagemDisplay[i] = ImagemDisplay[i-1];              //Puxa a imagem da linha (acima) para baixo
  86   1        if(ObstaculosInicio < NR_LINHAS - 1)        //Se os obstáculos ainda não chegaram até ao fim
  87   1        {
  88   2          ImagemDisplay[ObstaculosInicio] = LINHA_VAZIA;  //Apaga a "primeira" linha dos obstáculos
  89   2          ObstaculosInicio++;                       //Incrementa a posição onde "começam" os obstáculos
  90   2        }
  91   1      }
  92          /******************************************************************/
  93          
  94          /*  Função para verificar se há colisão entre o jogador e um obstáculo  */
  95          void verificarColisoes(void)
  96          {
  97   1        if(ImagemDisplay[POS_JOGADOR] & ImagemDisplay[POS_JOGADOR - 1]) //Se houver "interseção" (colisão)
  98   1          VidasRestantes--;                                                  //Decrementa a quantidade de vidas restantes
  99   1      }
 100          /************************************************************************/
 101          
 102          /* Função para mover o jogador para a esquerda (quando é premido o devido botão)  */
 103          void moverJogadorEsquerda() interrupt 0
 104          {
 105   1        if(ImagemDisplay[POS_JOGADOR] != LIMITE_X_ESQUERDA) //Se não tiver encostado na borda esquerda
 106   1          ImagemDisplay[POS_JOGADOR] *= 2;                  //O jogador anda para a esquerda (shift left)
 107   1      }
 108          /********************************************************************6**************/
 109          
 110          /* Função para mover o jogador para a direita (quando é premido o devido botão) */
 111          void moverJogadorDireita() interrupt 2
 112          {
 113   1        if(ImagemDisplay[POS_JOGADOR] != LIMITE_X_DIREITA)  //Se não tiver encostado na borda direita
 114   1          ImagemDisplay[POS_JOGADOR] /= 2;                  //O jogador anda para a direita (shift right)
 115   1      }
C51 COMPILER V9.56.0.0   JOGO                                                              06/02/2017 10:38:51 PAGE 3   

 116          /********************************************************************************/
 117          
 118          /*  Função de controlo para os obstáculos (que é feita a cada segundo)  */
 119          /*  (verificar se há colisão e movê-los para baixo)                     */
 120          void verificarObstaculos() interrupt 1
 121          { 
 122   1         // Reinicializa o timer
 123   1         TH0 = TEMPO_T0_HIGH;     
 124   1         TL0 = TEMPO_T0_LOW;
 125   1        
 126   1         TempoObstaculos--;           // Decrementa a contagem (de 1 segundo)
 127   1        
 128   1         // Caso a contagem tenha chegado ao fim,
 129   1         // Passa às verificações e ações dos obstáculos
 130   1         if (TempoObstaculos == 0)    
 131   1         {
 132   2            verificarColisoes();              // Verifica se há colisão entre o jogador e um obstáculo
 133   2            TempoObstaculos = DificuldadeAtual;   // Reinicializa a contagem
 134   2            moverObstaculos();                    // Move os obstáculos para baixo
 135   2         }
 136   1      }
 137          /************************************************************************/
 138          
 139          /*  Função para varrer o display  */
 140          void varrerDisplay(void) interrupt 3
 141          {
 142   1         DisplayY = VAZIO;                // Desliga todas as linhas de sa?da
 143   1         DisplayX = ImagemDisplay[LinhaAtual];  // Mostra a linha
 144   1         DisplayY = ImagemLinha[LinhaAtual];  // Activa a linha
 145   1         LinhaAtual++;                    // Passa para a próxima linha
 146   1        
 147   1         if (LinhaAtual == NR_LINHAS)     // Caso tenha chegado à ultima linha,
 148   1          LinhaAtual = 0;                 // Passa novamente para a primeira linha
 149   1      }
 150          /**********************************/
 151          
 152          /*  Função para desenhar os obstáculos pela primeira vez  */
 153          /*  (consoante a imagem (dos obstáculos) do devido nível) */
 154          void inicializarObstaculos()
 155          {
 156   1         ObstaculosInicio = 0;            // A "primeira" linha dos obstáculos começa no topo do display
 157   1           desenharNovaImagem(NivelAtual - 1);            // Desenha a imagem do nível atual
 158   1      }
 159          /**********************************************************/
 160          
 161          /*  Função para desenhar pela primeira vez o jogador (na sua posição inicial) */
 162          void inicializarJogador()
 163          {
 164   1         ImagemDisplay[POS_JOGADOR] = POS_JOGADOR_INICIAL;  //O jogador fica na sua posição inicial
 165   1      }
 166          /******************************************************************************/
 167          
 168          /*  Função para ligar as interrupções (com o estado adequado) */
 169          void ligarInterrupcoes(void)
 170          {
 171   1         TMOD = 33;                         // Timer 0 de 16 bits - #00100001b
 172   1         TH0 = TEMPO_T0_HIGH;                 // Timer 0 = 50 ms
 173   1         TL0 = TEMPO_T0_LOW; 
 174   1         TH1 = TEMPO_T1;                    // Timer 1 = 112 us
 175   1         TL1 = TEMPO_T1; 
 176   1         IP = 0;                            // Não altera as prioridades
 177   1         IE = INTERRUPCOES_SETUP; // Activa as interrupções - #10001111b:
C51 COMPILER V9.56.0.0   JOGO                                                              06/02/2017 10:38:51 PAGE 4   

 178   1         IT0 = 1;                           // Ext0 detectada na transição descendente
 179   1         IT1 = 1;                           // Ext1 detectada na transição descendente
 180   1         TR0 = 1;                           // Inicia timer 0
 181   1         TR1 = 1;                           // Inicia timer 1
 182   1         Input = VAZIO;                     // Porta de entrada é limpa
 183   1      }
 184          /**************************************************************/
 185          
 186          /*  Função para desligar as interrupções */
 187          void desligarInterrupcoes(void)
 188          {
 189   1        TR0 = 0;                  // Desliga o timer do verificarObstáculos (que traz os obstáculos para baixo)
 190   1      }
 191          /*****************************************/
 192          
 193          /* Função para mostrar a imagem de GameOver (quando o jogador perde todas as vidas num nível) */
 194          void gameOver()
 195          {
 196   1        desenharNovaImagem(IMAGEM_GAMEOVER);      //Desenha essa imagem
 197   1        desligarInterrupcoes();
 198   1        for(;;);                  //Fica em loop
 199   1      }
 200          /**********************************************************************************************/
 201          
 202          /* Função para mostrar a imagem da vitória (quando o jogador passa com sucesso por todos os níveis) */
 203          void victory()
 204          {
 205   1        desenharNovaImagem(IMAGEM_VICTORY);     //Desenha essa imagem
 206   1        desligarInterrupcoes();
 207   1        for(;;);                  //Fica em loop
 208   1      }
 209          /****************************************************************************************************/
 210          
 211          /* Função para jogar um dado nível do jogo */
 212          void jogar(double dificuldade)
 213          {
 214   1        //Busca no argumento 'dificuldade' o tempo que demora os obstáculos a descer
 215   1        DificuldadeAtual = dificuldade;     
 216   1        TempoObstaculos = DificuldadeAtual;
 217   1        
 218   1        inicializarJogador();             //O jogador é inicializado no display
 219   1        inicializarObstaculos();          //Os obstáculos do nível são inicializados no display
 220   1      
 221   1        //Ciclo do jogo propriamente dito
 222   1        while(VidasRestantes && ObstaculosInicio < NR_LINHAS - 1) {}
 223   1        
 224   1        //Caso tenha acabado o nível com sucesso,
 225   1        //Passa para o próximo nível
 226   1        if(VidasRestantes)
 227   1        {
 228   2          NivelAtual++;   
 229   2          return;
 230   2        }
 231   1        
 232   1        //Caso contrário,
 233   1        //Mostra a imagem de GameOver
 234   1        gameOver();
 235   1      }
 236          /*******************************************/
 237          
 238          /********************************************/
 239          /*            Função principal              */
C51 COMPILER V9.56.0.0   JOGO                                                              06/02/2017 10:38:51 PAGE 5   

 240          /********************************************/
 241          void main()
 242          {
 243   1        LinhaAtual = 0;                   // Indica que é para mostrar a primeira linha
 244   1        ligarInterrupcoes();      //Liga as interrupções
 245   1        VidasRestantes = VIDAS_INICIAL;   //vidas restantes do jogador é inicializada
 246   1        
 247   1        jogar(DIFICULDADE1);      //Nível 1 do jogo
 248   1        jogar(DIFICULDADE2);      //Nível 2 do jogo
 249   1        jogar(DIFICULDADE3);      //Nível 3 do jogo
 250   1        jogar(DIFICULDADE4);      //Nível 4 do jogo
 251   1        jogar(DIFICULDADE5);      //Nível 5 do jogo
 252   1      
 253   1        //Caso tenha passado por todos os níveis sem perder as vidas todas
 254   1        //Mostra a imagem da vitória
 255   1        victory();
 256   1      }
 257          /********************************************/
 258          /********************************************/
C51 COMPILER V9.56.0.0   JOGO                                                              06/02/2017 10:38:51 PAGE 6   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _desenharNovaImagem (BEGIN)
                                           ; SOURCE LINE # 72
;---- Variable 'NovaImagem' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 73
                                           ; SOURCE LINE # 75
;---- Variable 'i' assigned to Register 'R4/R5' ----
0000 E4                CLR     A
0001 FD                MOV     R5,A
0002 FC                MOV     R4,A
0003         ?C0001:
                                           ; SOURCE LINE # 76
0003 EF                MOV     A,R7
0004 75F006            MOV     B,#06H
0007 A4                MUL     AB
0008 2400        R     ADD     A,#LOW Imagens
000A 2D                ADD     A,R5
000B F8                MOV     R0,A
000C E6                MOV     A,@R0
000D FE                MOV     R6,A
000E 7400        R     MOV     A,#LOW ImagemDisplay
0010 2D                ADD     A,R5
0011 F8                MOV     R0,A
0012 A606              MOV     @R0,AR6
0014 0D                INC     R5
0015 BD0001            CJNE    R5,#00H,?C0035
0018 0C                INC     R4
0019         ?C0035:
0019 ED                MOV     A,R5
001A 6406              XRL     A,#06H
001C 4C                ORL     A,R4
001D 70E4              JNZ     ?C0001
                                           ; SOURCE LINE # 77
001F         ?C0004:
001F 22                RET     
             ; FUNCTION _desenharNovaImagem (END)

             ; FUNCTION moverObstaculos (BEGIN)
                                           ; SOURCE LINE # 81
                                           ; SOURCE LINE # 82
                                           ; SOURCE LINE # 84
;---- Variable 'i' assigned to Register 'R6/R7' ----
0000 7F05              MOV     R7,#05H
0002 7E00              MOV     R6,#00H
0004         ?C0005:
0004 AD00        R     MOV     R5,ObstaculosInicio
0006 ED                MOV     A,R5
0007 33                RLC     A
0008 95E0              SUBB    A,ACC
000A FC                MOV     R4,A
000B D3                SETB    C
000C EF                MOV     A,R7
000D 9D                SUBB    A,R5
000E EC                MOV     A,R4
000F 6480              XRL     A,#080H
0011 F8                MOV     R0,A
0012 EE                MOV     A,R6
0013 6480              XRL     A,#080H
0015 98                SUBB    A,R0
0016 4013              JC      ?C0006
C51 COMPILER V9.56.0.0   JOGO                                                              06/02/2017 10:38:51 PAGE 7   

                                           ; SOURCE LINE # 85
0018 7400        R     MOV     A,#LOW ImagemDisplay+0FFFFH
001A 2F                ADD     A,R7
001B F8                MOV     R0,A
001C E6                MOV     A,@R0
001D FD                MOV     R5,A
001E 7400        R     MOV     A,#LOW ImagemDisplay
0020 2F                ADD     A,R7
0021 F8                MOV     R0,A
0022 A605              MOV     @R0,AR5
0024 EF                MOV     A,R7
0025 1F                DEC     R7
0026 70DC              JNZ     ?C0005
0028 1E                DEC     R6
0029         ?C0036:
0029 80D9              SJMP    ?C0005
002B         ?C0006:
                                           ; SOURCE LINE # 86
002B C3                CLR     C
002C E500        R     MOV     A,ObstaculosInicio
002E 6480              XRL     A,#080H
0030 9486              SUBB    A,#086H
0032 5009              JNC     ?C0009
                                           ; SOURCE LINE # 87
                                           ; SOURCE LINE # 88
0034 7400        R     MOV     A,#LOW ImagemDisplay
0036 2500        R     ADD     A,ObstaculosInicio
0038 F8                MOV     R0,A
0039 E4                CLR     A
003A F6                MOV     @R0,A
                                           ; SOURCE LINE # 89
003B 0500        R     INC     ObstaculosInicio
                                           ; SOURCE LINE # 90
                                           ; SOURCE LINE # 91
003D         ?C0009:
003D 22                RET     
             ; FUNCTION moverObstaculos (END)

             ; FUNCTION verificarColisoes (BEGIN)
                                           ; SOURCE LINE # 95
                                           ; SOURCE LINE # 96
                                           ; SOURCE LINE # 97
0000 E500        R     MOV     A,ImagemDisplay+06H
0002 5500        R     ANL     A,ImagemDisplay+05H
0004 6002              JZ      ?C0011
                                           ; SOURCE LINE # 98
0006 1500        R     DEC     VidasRestantes
                                           ; SOURCE LINE # 99
0008         ?C0011:
0008 22                RET     
             ; FUNCTION verificarColisoes (END)

             ; FUNCTION moverJogadorEsquerda (BEGIN)
0000 C0E0              PUSH    ACC
0002 C0D0              PUSH    PSW
                                           ; SOURCE LINE # 103
                                           ; SOURCE LINE # 105
0004 E500        R     MOV     A,ImagemDisplay+06H
0006 6410              XRL     A,#010H
0008 6006              JZ      ?C0013
                                           ; SOURCE LINE # 106
000A E500        R     MOV     A,ImagemDisplay+06H
C51 COMPILER V9.56.0.0   JOGO                                                              06/02/2017 10:38:51 PAGE 8   

000C 25E0              ADD     A,ACC
000E F500        R     MOV     ImagemDisplay+06H,A
                                           ; SOURCE LINE # 107
0010         ?C0013:
0010 D0D0              POP     PSW
0012 D0E0              POP     ACC
0014 32                RETI    
             ; FUNCTION moverJogadorEsquerda (END)

             ; FUNCTION moverJogadorDireita (BEGIN)
0000 C0E0              PUSH    ACC
0002 C0D0              PUSH    PSW
                                           ; SOURCE LINE # 111
                                           ; SOURCE LINE # 113
0004 E500        R     MOV     A,ImagemDisplay+06H
0006 6401              XRL     A,#01H
0008 6007              JZ      ?C0015
                                           ; SOURCE LINE # 114
000A E500        R     MOV     A,ImagemDisplay+06H
000C A2E7              MOV     C,ACC.7
000E 13                RRC     A
000F F500        R     MOV     ImagemDisplay+06H,A
                                           ; SOURCE LINE # 115
0011         ?C0015:
0011 D0D0              POP     PSW
0013 D0E0              POP     ACC
0015 32                RETI    
             ; FUNCTION moverJogadorDireita (END)

             ; FUNCTION verificarObstaculos (BEGIN)
0000 C0E0              PUSH    ACC
0002 C0D0              PUSH    PSW
0004 75D000            MOV     PSW,#00H
0007 C000              PUSH    AR0
0009 C004              PUSH    AR4
000B C005              PUSH    AR5
000D C006              PUSH    AR6
000F C007              PUSH    AR7
                                           ; SOURCE LINE # 120
                                           ; SOURCE LINE # 123
0011 758C3C            MOV     TH0,#03CH
                                           ; SOURCE LINE # 124
0014 758AAF            MOV     TL0,#0AFH
                                           ; SOURCE LINE # 126
0017 D50009      R     DJNZ    TempoObstaculos,?C0017
                                           ; SOURCE LINE # 130
                                           ; SOURCE LINE # 131
                                           ; SOURCE LINE # 132
001A 120000      R     LCALL   verificarColisoes
                                           ; SOURCE LINE # 133
001D 850000      R     MOV     TempoObstaculos,DificuldadeAtual
                                           ; SOURCE LINE # 134
0020 120000      R     LCALL   moverObstaculos
                                           ; SOURCE LINE # 135
                                           ; SOURCE LINE # 136
0023         ?C0017:
0023 D007              POP     AR7
0025 D006              POP     AR6
0027 D005              POP     AR5
0029 D004              POP     AR4
002B D000              POP     AR0
002D D0D0              POP     PSW
C51 COMPILER V9.56.0.0   JOGO                                                              06/02/2017 10:38:51 PAGE 9   

002F D0E0              POP     ACC
0031 32                RETI    
             ; FUNCTION verificarObstaculos (END)

             ; FUNCTION varrerDisplay (BEGIN)
0000 C0E0              PUSH    ACC
0002 C0D0              PUSH    PSW
0004 75D000            MOV     PSW,#00H
0007 C000              PUSH    AR0
                                           ; SOURCE LINE # 140
                                           ; SOURCE LINE # 142
0009 7590FF            MOV     P1,#0FFH
                                           ; SOURCE LINE # 143
000C 7400        R     MOV     A,#LOW ImagemDisplay
000E 2500        R     ADD     A,LinhaAtual
0010 F8                MOV     R0,A
0011 E6                MOV     A,@R0
0012 F5A0              MOV     P2,A
                                           ; SOURCE LINE # 144
0014 7400        R     MOV     A,#LOW ImagemLinha
0016 2500        R     ADD     A,LinhaAtual
0018 F8                MOV     R0,A
0019 E6                MOV     A,@R0
001A F590              MOV     P1,A
                                           ; SOURCE LINE # 145
001C 0500        R     INC     LinhaAtual
                                           ; SOURCE LINE # 147
001E E500        R     MOV     A,LinhaAtual
0020 B40703            CJNE    A,#07H,?C0019
                                           ; SOURCE LINE # 148
0023 750000      R     MOV     LinhaAtual,#00H
                                           ; SOURCE LINE # 149
0026         ?C0019:
0026 D000              POP     AR0
0028 D0D0              POP     PSW
002A D0E0              POP     ACC
002C 32                RETI    
             ; FUNCTION varrerDisplay (END)

             ; FUNCTION inicializarObstaculos (BEGIN)
                                           ; SOURCE LINE # 154
                                           ; SOURCE LINE # 155
                                           ; SOURCE LINE # 156
0000 E4                CLR     A
0001 F500        R     MOV     ObstaculosInicio,A
                                           ; SOURCE LINE # 157
0003 E500        R     MOV     A,NivelAtual
0005 14                DEC     A
0006 FF                MOV     R7,A
0007 020000      R     LJMP    _desenharNovaImagem
             ; FUNCTION inicializarObstaculos (END)

             ; FUNCTION inicializarJogador (BEGIN)
                                           ; SOURCE LINE # 162
                                           ; SOURCE LINE # 163
                                           ; SOURCE LINE # 164
0000 750004      R     MOV     ImagemDisplay+06H,#04H
                                           ; SOURCE LINE # 165
0003 22                RET     
             ; FUNCTION inicializarJogador (END)

             ; FUNCTION ligarInterrupcoes (BEGIN)
C51 COMPILER V9.56.0.0   JOGO                                                              06/02/2017 10:38:51 PAGE 10  

                                           ; SOURCE LINE # 169
                                           ; SOURCE LINE # 170
                                           ; SOURCE LINE # 171
0000 758921            MOV     TMOD,#021H
                                           ; SOURCE LINE # 172
0003 758C3C            MOV     TH0,#03CH
                                           ; SOURCE LINE # 173
0006 758AAF            MOV     TL0,#0AFH
                                           ; SOURCE LINE # 174
0009 758D70            MOV     TH1,#070H
                                           ; SOURCE LINE # 175
000C 758B70            MOV     TL1,#070H
                                           ; SOURCE LINE # 176
000F E4                CLR     A
0010 F5B8              MOV     IP,A
                                           ; SOURCE LINE # 177
0012 75A88F            MOV     IE,#08FH
                                           ; SOURCE LINE # 178
0015 D288              SETB    IT0
                                           ; SOURCE LINE # 179
0017 D28A              SETB    IT1
                                           ; SOURCE LINE # 180
0019 D28C              SETB    TR0
                                           ; SOURCE LINE # 181
001B D28E              SETB    TR1
                                           ; SOURCE LINE # 182
001D D2B0              SETB    Input
                                           ; SOURCE LINE # 183
001F 22                RET     
             ; FUNCTION ligarInterrupcoes (END)

             ; FUNCTION desligarInterrupcoes (BEGIN)
                                           ; SOURCE LINE # 187
                                           ; SOURCE LINE # 188
                                           ; SOURCE LINE # 189
0000 C28C              CLR     TR0
                                           ; SOURCE LINE # 190
0002 22                RET     
             ; FUNCTION desligarInterrupcoes (END)

             ; FUNCTION gameOver (BEGIN)
                                           ; SOURCE LINE # 194
                                           ; SOURCE LINE # 195
                                           ; SOURCE LINE # 196
0000 7F05              MOV     R7,#05H
0002 120000      R     LCALL   _desenharNovaImagem
                                           ; SOURCE LINE # 197
0005 120000      R     LCALL   desligarInterrupcoes
                                           ; SOURCE LINE # 198
0008         ?C0024:
0008 80FE              SJMP    ?C0024
             ; FUNCTION gameOver (END)

             ; FUNCTION victory (BEGIN)
                                           ; SOURCE LINE # 203
                                           ; SOURCE LINE # 204
                                           ; SOURCE LINE # 205
0000 7F06              MOV     R7,#06H
0002 120000      R     LCALL   _desenharNovaImagem
                                           ; SOURCE LINE # 206
0005 120000      R     LCALL   desligarInterrupcoes
                                           ; SOURCE LINE # 207
C51 COMPILER V9.56.0.0   JOGO                                                              06/02/2017 10:38:51 PAGE 11  

0008         ?C0027:
0008 80FE              SJMP    ?C0027
             ; FUNCTION victory (END)

             ; FUNCTION L?0037 (BEGIN)
0000 7F00              MOV     R7,#00H
0002 7E00              MOV     R6,#00H
0004 7C40              MOV     R4,#040H
             ; FUNCTION _jogar (BEGIN)
                                           ; SOURCE LINE # 212
;---- Variable 'dificuldade' assigned to Register 'R4/R5/R6/R7' ----
                                           ; SOURCE LINE # 213
                                           ; SOURCE LINE # 215
0006 120000      E     LCALL   ?C?CASTF
0009 8F00        R     MOV     DificuldadeAtual,R7
                                           ; SOURCE LINE # 216
000B 850000      R     MOV     TempoObstaculos,DificuldadeAtual
                                           ; SOURCE LINE # 218
000E 120000      R     LCALL   inicializarJogador
                                           ; SOURCE LINE # 219
0011 120000      R     LCALL   inicializarObstaculos
0014         ?C0030:
                                           ; SOURCE LINE # 222
0014 E500        R     MOV     A,VidasRestantes
0016 6009              JZ      ?C0031
0018 C3                CLR     C
0019 E500        R     MOV     A,ObstaculosInicio
001B 6480              XRL     A,#080H
001D 9486              SUBB    A,#086H
001F 40F3              JC      ?C0030
0021         ?C0031:
                                           ; SOURCE LINE # 226
0021 E500        R     MOV     A,VidasRestantes
0023 6003              JZ      ?C0032
                                           ; SOURCE LINE # 227
                                           ; SOURCE LINE # 228
0025 0500        R     INC     NivelAtual
0027 22                RET     
                                           ; SOURCE LINE # 230
0028         ?C0032:
                                           ; SOURCE LINE # 234
0028 120000      R     LCALL   gameOver
                                           ; SOURCE LINE # 235
002B         ?C0033:
002B 22                RET     
             ; FUNCTION _jogar (END)

             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 241
                                           ; SOURCE LINE # 242
                                           ; SOURCE LINE # 243
0000 E4                CLR     A
0001 F500        R     MOV     LinhaAtual,A
                                           ; SOURCE LINE # 244
0003 120000      R     LCALL   ligarInterrupcoes
                                           ; SOURCE LINE # 245
0006 750004      R     MOV     VidasRestantes,#04H
                                           ; SOURCE LINE # 247
0009 7DA0              MOV     R5,#0A0H
000B 120000      R     LCALL   L?0037
                                           ; SOURCE LINE # 248
000E 7D80              MOV     R5,#080H
C51 COMPILER V9.56.0.0   JOGO                                                              06/02/2017 10:38:51 PAGE 12  

0010 120000      R     LCALL   L?0037
                                           ; SOURCE LINE # 249
0013 7F00              MOV     R7,#00H
0015 7E00              MOV     R6,#00H
0017 7D40              MOV     R5,#040H
0019 7C40              MOV     R4,#040H
001B 120000      R     LCALL   _jogar
                                           ; SOURCE LINE # 250
001E 7F00              MOV     R7,#00H
0020 7E00              MOV     R6,#00H
0022 7D00              MOV     R5,#00H
0024 7C40              MOV     R4,#040H
0026 120000      R     LCALL   _jogar
                                           ; SOURCE LINE # 251
0029 7F00              MOV     R7,#00H
002B 7E00              MOV     R6,#00H
002D 7D80              MOV     R5,#080H
002F 7C3F              MOV     R4,#03FH
0031 120000      R     LCALL   _jogar
                                           ; SOURCE LINE # 255
0034 020000      R     LJMP    victory
             ; FUNCTION main (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    409    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     62    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
