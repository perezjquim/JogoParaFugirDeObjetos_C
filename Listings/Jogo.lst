C51 COMPILER V9.56.0.0   JOGO                                                              05/31/2017 09:40:12 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE JOGO
OBJECT MODULE PLACED IN .\Objects\Jogo.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Jogo.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND CODE NOCOND PRINT(.\L
                    -istings\Jogo.lst) TABS(2) OBJECT(.\Objects\Jogo.obj)

line level    source

   1          /*  Livrarias */
   2          #include <reg51.h>
   3          #include <stdio.h>
   4          #include <stdlib.h>
   5          /**************/
   6          
   7          /*  Portas  */
   8          sbit Input = P3;
   9          #define DisplayX P2
  10          #define DisplayY P1
  11          /************/
  12          
  13          /* Constantes auxiliares (microcontrolador) */
  14          #define TEMPO_HIGH  0x3C                  // Byte mais significativo do timer 0 - 50 ms (12MHz)
  15          #define TEMPO_LOW 0xAF                    // Byte menos significativo do timer 0 - 50 ms (12MHz)
  16          #define TEMPO_T1 0x70                     // 0x70 Tempo do timer 1 - 112 us (12MHz)
  17          #define VAZIO 0xFF                        // Porta vazia (tudo desligado)
  18          #define INTERRUPCOES_ESTADO_INICIAL 143   // Estado das interrupções ao ser corrido o programa
  19          /********************************************/
  20          
  21          /*  Constantes auxiliares (jogo)  */
  22          #define GAMEOVER 5            // ID da imagem do gameover
  23          #define VICTORY 6             // ID da imagem da vitória
  24          #define NR_IMAGENS 7          // Número de imagens
  25          #define NR_LINHAS 7           // Número total de linhas
  26          #define POS_JOGADOR 6         // Coordenada Y do jogador (última linha)
  27          #define POS_JOGADOR_INICIAL 4         // Posição inicial do jogador (no meio da linha)
  28          #define VIDAS_INICIAL 4       // Nº de vidas para o jogador (3 vidas)
  29          #define DIFICULDADE1 20       // Velocidade a que descem os obstáculos (dificuldade)
  30          #define DIFICULDADE2 18       // Velocidade a que descem os obstáculos (dificuldade)
  31          #define DIFICULDADE3 15       // Velocidade a que descem os obstáculos (dificuldade)
  32          #define DIFICULDADE4 10       // Velocidade a que descem os obstáculos (dificuldade)
  33          #define DIFICULDADE5 7        // Velocidade a que descem os obstáculos (dificuldade)
  34          #define LIMITE_X_DIREITA 1    // Limite direito do display em relação ao X
  35          #define LIMITE_X_ESQUERDA 16  // Limite esquerdo do display em relação ao X
  36          #define LINHA_VAZIA 0         // Representa uma linha vazia (imagem com os LEDs todos desligados)
  37          /**********************************/
  38          
  39          /*  Variáveis do jogo */
  40          char LinhaAtual;            // Variável para guardar o número de linha
  41          char ImagemX[NR_LINHAS];    // Display com 7 valores
  42          
  43          char VidasRestantes;        // Vidas restantes do jogador
  44          char TempoObstaculos;       // Tempo (restante) antes de descerem (novamente) os obstáculos
  45          char DificuldadeAtual;      // Dificuldade atual do jogo (tempo estipulado para a frequência com que os obstá
             -culos vão descendo)
  46          char ObstaculosInicio;      // Limite superior dos obstáculos
  47          char NivelAtual = 1;        // Nível atual do jogo (que representa a imagem do vetor a ser desenhada)
  48          /**********************/
  49          
  50          /*  Conjunto de imagens do jogo */
  51          static char Imagens[NR_IMAGENS][NR_LINHAS - 1] = 
  52          {{3, 2, 1, 6, 0, 0},    // Nível 1
  53          {4, 3, 2, 6, 0, 0},   // Nível 2
C51 COMPILER V9.56.0.0   JOGO                                                              05/31/2017 09:40:12 PAGE 2   

  54          {7, 6, 2, 6, 0, 0},   // Nível 3
  55          {8, 2, 3, 6, 0, 0},   // Nível 4
  56          {1, 4, 4, 6, 0, 0},   // Nível 5
  57          {17,10,4,10,17,0},      // Game over
  58          {31,31,31,31,31,31}}; // Vitória
  59          /********************************/
  60          
  61          /*  Vetor para ativar as linhas do display  */
  62          static char ImagemY[NR_LINHAS] = 
  63          {254, 253, 251, 247, 239, 223, 191};
  64          /********************************************/
  65          
  66          /* Função para desenhar uma nova imagem no ecrã */
  67          void desenharNovaImagem(char NovaImagem)
  68          {
  69   1         int i;       
  70   1         for (i = 0; i < POS_JOGADOR; i++)
  71   1            ImagemX[i] = Imagens[NovaImagem][i];    //Atualiza a linha com a nova imagem
  72   1      }
  73          /************************************************/
  74          
  75          /* Função para mover todos os obstáculos (uma "casa" para baixo)  */
  76          void moverObstaculos()
  77          {
  78   1        int i;
  79   1        for (i = POS_JOGADOR - 1; i > ObstaculosInicio ; i--)     //Percorre todas as linhas
  80   1            ImagemX[i] = ImagemX[i-1];              //Puxa a imagem da linha (acima) para baixo
  81   1        if(ObstaculosInicio < NR_LINHAS - 1)        //Se os obstáculos ainda não chegaram até ao fim
  82   1        {
  83   2          ImagemX[ObstaculosInicio] = LINHA_VAZIA;  //Apaga a "primeira" linha dos obstáculos
  84   2          ObstaculosInicio++;                       //Incrementa a posição onde "começam" os obstáculos
  85   2        }
  86   1      }
  87          /******************************************************************/
  88          
  89          /*  Função para verificar se há colisão entre o jogador e um obstáculo  */
  90          void verificarColisoes(void)
  91          {
  92   1        if(ImagemX[POS_JOGADOR] & ImagemX[POS_JOGADOR - 1]) //Se houver "interseção" (colisão)
  93   1          VidasRestantes--;                                                  //Decrementa a quantidade de vidas restantes
  94   1      }
  95          /************************************************************************/
  96          
  97          /* Função para mover o jogador para a esquerda (quando é premido o devido botão)  */
  98          void moverJogadorEsquerda() interrupt 0
  99          {
 100   1        if(ImagemX[POS_JOGADOR] != LIMITE_X_ESQUERDA) //Se não tiver encostado na borda esquerda
 101   1          ImagemX[POS_JOGADOR] *= 2;                  //O jogador anda para a esquerda (shift left)
 102   1      }
 103          /********************************************************************6**************/
 104          
 105          /* Função para mover o jogador para a direita (quando é premido o devido botão) */
 106          void moverJogadorDireita() interrupt 2
 107          {
 108   1        if(ImagemX[POS_JOGADOR] != LIMITE_X_DIREITA)  //Se não tiver encostado na borda direita
 109   1          ImagemX[POS_JOGADOR] /= 2;                  //O jogador anda para a direita (shift right)
 110   1      }
 111          /********************************************************************************/
 112          
 113          /*  Função de controlo para os obstáculos (que é feita a cada segundo)  */
 114          /*  (verificar se há colisão e movê-los para baixo)                     */
 115          void verificarObstaculos() interrupt 1
C51 COMPILER V9.56.0.0   JOGO                                                              05/31/2017 09:40:12 PAGE 3   

 116          { 
 117   1         // Reinicializa o timer
 118   1         TH0 = TEMPO_HIGH;      
 119   1         TL0 = TEMPO_LOW;
 120   1        
 121   1         TempoObstaculos--;           // Decrementa a contagem (de 1 segundo)
 122   1        
 123   1         // Caso a contagem tenha chegado ao fim,
 124   1         // Passa às verificações e ações dos obstáculos
 125   1         if (TempoObstaculos == 0)    
 126   1         {
 127   2            verificarColisoes();              // Verifica se há colisão entre o jogador e um obstáculo
 128   2            TempoObstaculos = DificuldadeAtual;   // Reinicializa a contagem
 129   2            moverObstaculos();                    // Move os obstáculos para baixo
 130   2         }
 131   1      }
 132          /************************************************************************/
 133          
 134          /*  Função para varrer o display  */
 135          void varrerDisplay(void) interrupt 3
 136          {
 137   1         DisplayY = VAZIO;                // Desliga todas as linhas de sa?da
 138   1         DisplayX = ImagemX[LinhaAtual];  // Mostra a linha
 139   1         DisplayY = ImagemY[LinhaAtual];  // Activa a linha
 140   1         LinhaAtual++;                    // Passa para a próxima linha
 141   1        
 142   1         if (LinhaAtual == NR_LINHAS)     // Caso tenha chegado à ultima linha,
 143   1          LinhaAtual = 0;                 // Passa novamente para a primeira linha
 144   1      }
 145          /**********************************/
 146          
 147          /*  Função para desenhar os obstáculos pela primeira vez  */
 148          /*  (consoante a imagem (dos obstáculos) do devido nível) */
 149          void inicializarObstaculos()
 150          {
 151   1         ObstaculosInicio = 0;            // A "primeira" linha dos obstáculos começa no topo do display
 152   1           desenharNovaImagem(NivelAtual - 1);            // Desenha a imagem do nível atual
 153   1      }
 154          /**********************************************************/
 155          
 156          /*  Função para desenhar pela primeira vez o jogador (na sua posição inicial) */
 157          void inicializarJogador()
 158          {
 159   1         ImagemX[POS_JOGADOR] = POS_JOGADOR_INICIAL;  //O jogador fica na sua posição inicial
 160   1      }
 161          /******************************************************************************/
 162          
 163          /*  Função para ligar as interrupções (com o estado adequado) */
 164          void ligarInterrupcoes(void)
 165          {
 166   1         TMOD = 33;                         // Timer 0 de 16 bits - #00100001b
 167   1         TH0 = TEMPO_HIGH;                  // Timer 0 = 50 ms
 168   1         TL0 = TEMPO_LOW; 
 169   1         TH1 = TEMPO_T1;                    // Timer 1 = 112 us
 170   1         TL1 = TEMPO_T1; 
 171   1         IP = 0;                            // Não altera as prioridades
 172   1         IE = INTERRUPCOES_ESTADO_INICIAL;  // Activa as interrupções - #10001111b:
 173   1         IT0 = 1;                           // Ext0 detectada na transição descendente
 174   1         IT1 = 1;                           // Ext1 detectada na transição descendente
 175   1         TR0 = 1;                           // Inicia timer 0
 176   1         TR1 = 1;                           // Inicia timer 1
 177   1         LinhaAtual = 0;                    // Indica que é para mostrar a primeira linha
C51 COMPILER V9.56.0.0   JOGO                                                              05/31/2017 09:40:12 PAGE 4   

 178   1         Input = VAZIO;                     // Porta de entrada é limpa
 179   1      }
 180          /**************************************************************/
 181          
 182          /*  Função para desligar as interrupções */
 183          void desligarInterrupcoes(void)
 184          {
 185   1        TR0 = 0;                  // Desliga o timer do verificarObstáculos (que traz os obstáculos para baixo)
 186   1      }
 187          /*****************************************/
 188          
 189          /* Função para mostrar a imagem de GameOver (quando o jogador perde todas as vidas num nível) */
 190          void gameOver()
 191          {
 192   1        desenharNovaImagem(GAMEOVER);     //Desenha essa imagem
 193   1        desligarInterrupcoes();
 194   1        for(;;);                  //Fica em loop
 195   1      }
 196          /**********************************************************************************************/
 197          
 198          /* Função para mostrar a imagem da vitória (quando o jogador passa com sucesso por todos os níveis) */
 199          void victory()
 200          {
 201   1        desenharNovaImagem(VICTORY);      //Desenha essa imagem
 202   1        desligarInterrupcoes();
 203   1        for(;;);                  //Fica em loop
 204   1      }
 205          /****************************************************************************************************/
 206          
 207          /* Função para jogar um dado nível do jogo */
 208          void jogar(double dificuldade)
 209          {
 210   1        //Busca no argumento 'dificuldade' o tempo que demora os obstáculos a descer
 211   1        DificuldadeAtual = dificuldade;     
 212   1        TempoObstaculos = DificuldadeAtual;
 213   1        
 214   1        inicializarJogador();             //O jogador é inicializado no display
 215   1        inicializarObstaculos();          //Os obstáculos do nível são inicializados no display
 216   1      
 217   1        //Ciclo do jogo propriamente dito
 218   1        while(VidasRestantes && ObstaculosInicio < NR_LINHAS - 1) {}
 219   1        
 220   1        //Caso tenha acabado o nível com sucesso,
 221   1        //Passa para o próximo nível
 222   1        if(VidasRestantes)
 223   1        {
 224   2          NivelAtual++;   
 225   2          return;
 226   2        }
 227   1        
 228   1        //Caso contrário,
 229   1        //Mostra a imagem de GameOver
 230   1        gameOver();
 231   1      }
 232          /*******************************************/
 233          
 234          /********************************************/
 235          /*            Função principal              */
 236          /********************************************/
 237          void main()
 238          {
 239   1        ligarInterrupcoes();      //Liga as interrupções
C51 COMPILER V9.56.0.0   JOGO                                                              05/31/2017 09:40:12 PAGE 5   

 240   1        VidasRestantes = VIDAS_INICIAL;   //vidas restantes do jogador é inicializada
 241   1        
 242   1        jogar(DIFICULDADE1);      //Nível 1 do jogo
 243   1        jogar(DIFICULDADE2);      //Nível 2 do jogo
 244   1        jogar(DIFICULDADE3);      //Nível 3 do jogo
 245   1        jogar(DIFICULDADE4);      //Nível 4 do jogo
 246   1        jogar(DIFICULDADE5);      //Nível 5 do jogo
 247   1      
 248   1        //Caso tenha passado por todos os níveis sem perder as vidas todas
 249   1        //Mostra a imagem da vitória
 250   1        victory();
 251   1      }
 252          /********************************************/
 253          /********************************************/
C51 COMPILER V9.56.0.0   JOGO                                                              05/31/2017 09:40:12 PAGE 6   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _desenharNovaImagem (BEGIN)
                                           ; SOURCE LINE # 67
;---- Variable 'NovaImagem' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 68
                                           ; SOURCE LINE # 70
;---- Variable 'i' assigned to Register 'R4/R5' ----
0000 E4                CLR     A
0001 FD                MOV     R5,A
0002 FC                MOV     R4,A
0003         ?C0001:
                                           ; SOURCE LINE # 71
0003 EF                MOV     A,R7
0004 75F006            MOV     B,#06H
0007 A4                MUL     AB
0008 2400        R     ADD     A,#LOW Imagens
000A 2D                ADD     A,R5
000B F8                MOV     R0,A
000C E6                MOV     A,@R0
000D FE                MOV     R6,A
000E 7400        R     MOV     A,#LOW ImagemX
0010 2D                ADD     A,R5
0011 F8                MOV     R0,A
0012 A606              MOV     @R0,AR6
0014 0D                INC     R5
0015 BD0001            CJNE    R5,#00H,?C0035
0018 0C                INC     R4
0019         ?C0035:
0019 ED                MOV     A,R5
001A 6406              XRL     A,#06H
001C 4C                ORL     A,R4
001D 70E4              JNZ     ?C0001
                                           ; SOURCE LINE # 72
001F         ?C0004:
001F 22                RET     
             ; FUNCTION _desenharNovaImagem (END)

             ; FUNCTION moverObstaculos (BEGIN)
                                           ; SOURCE LINE # 76
                                           ; SOURCE LINE # 77
                                           ; SOURCE LINE # 79
;---- Variable 'i' assigned to Register 'R6/R7' ----
0000 7F05              MOV     R7,#05H
0002 7E00              MOV     R6,#00H
0004         ?C0005:
0004 AD00        R     MOV     R5,ObstaculosInicio
0006 ED                MOV     A,R5
0007 33                RLC     A
0008 95E0              SUBB    A,ACC
000A FC                MOV     R4,A
000B D3                SETB    C
000C EF                MOV     A,R7
000D 9D                SUBB    A,R5
000E EC                MOV     A,R4
000F 6480              XRL     A,#080H
0011 F8                MOV     R0,A
0012 EE                MOV     A,R6
0013 6480              XRL     A,#080H
0015 98                SUBB    A,R0
0016 4013              JC      ?C0006
C51 COMPILER V9.56.0.0   JOGO                                                              05/31/2017 09:40:12 PAGE 7   

                                           ; SOURCE LINE # 80
0018 7400        R     MOV     A,#LOW ImagemX+0FFFFH
001A 2F                ADD     A,R7
001B F8                MOV     R0,A
001C E6                MOV     A,@R0
001D FD                MOV     R5,A
001E 7400        R     MOV     A,#LOW ImagemX
0020 2F                ADD     A,R7
0021 F8                MOV     R0,A
0022 A605              MOV     @R0,AR5
0024 EF                MOV     A,R7
0025 1F                DEC     R7
0026 70DC              JNZ     ?C0005
0028 1E                DEC     R6
0029         ?C0036:
0029 80D9              SJMP    ?C0005
002B         ?C0006:
                                           ; SOURCE LINE # 81
002B C3                CLR     C
002C E500        R     MOV     A,ObstaculosInicio
002E 6480              XRL     A,#080H
0030 9486              SUBB    A,#086H
0032 5009              JNC     ?C0009
                                           ; SOURCE LINE # 82
                                           ; SOURCE LINE # 83
0034 7400        R     MOV     A,#LOW ImagemX
0036 2500        R     ADD     A,ObstaculosInicio
0038 F8                MOV     R0,A
0039 E4                CLR     A
003A F6                MOV     @R0,A
                                           ; SOURCE LINE # 84
003B 0500        R     INC     ObstaculosInicio
                                           ; SOURCE LINE # 85
                                           ; SOURCE LINE # 86
003D         ?C0009:
003D 22                RET     
             ; FUNCTION moverObstaculos (END)

             ; FUNCTION verificarColisoes (BEGIN)
                                           ; SOURCE LINE # 90
                                           ; SOURCE LINE # 91
                                           ; SOURCE LINE # 92
0000 E500        R     MOV     A,ImagemX+06H
0002 5500        R     ANL     A,ImagemX+05H
0004 6002              JZ      ?C0011
                                           ; SOURCE LINE # 93
0006 1500        R     DEC     VidasRestantes
                                           ; SOURCE LINE # 94
0008         ?C0011:
0008 22                RET     
             ; FUNCTION verificarColisoes (END)

             ; FUNCTION moverJogadorEsquerda (BEGIN)
0000 C0E0              PUSH    ACC
0002 C0D0              PUSH    PSW
                                           ; SOURCE LINE # 98
                                           ; SOURCE LINE # 100
0004 E500        R     MOV     A,ImagemX+06H
0006 6410              XRL     A,#010H
0008 6006              JZ      ?C0013
                                           ; SOURCE LINE # 101
000A E500        R     MOV     A,ImagemX+06H
C51 COMPILER V9.56.0.0   JOGO                                                              05/31/2017 09:40:12 PAGE 8   

000C 25E0              ADD     A,ACC
000E F500        R     MOV     ImagemX+06H,A
                                           ; SOURCE LINE # 102
0010         ?C0013:
0010 D0D0              POP     PSW
0012 D0E0              POP     ACC
0014 32                RETI    
             ; FUNCTION moverJogadorEsquerda (END)

             ; FUNCTION moverJogadorDireita (BEGIN)
0000 C0E0              PUSH    ACC
0002 C0D0              PUSH    PSW
                                           ; SOURCE LINE # 106
                                           ; SOURCE LINE # 108
0004 E500        R     MOV     A,ImagemX+06H
0006 6401              XRL     A,#01H
0008 6007              JZ      ?C0015
                                           ; SOURCE LINE # 109
000A E500        R     MOV     A,ImagemX+06H
000C A2E7              MOV     C,ACC.7
000E 13                RRC     A
000F F500        R     MOV     ImagemX+06H,A
                                           ; SOURCE LINE # 110
0011         ?C0015:
0011 D0D0              POP     PSW
0013 D0E0              POP     ACC
0015 32                RETI    
             ; FUNCTION moverJogadorDireita (END)

             ; FUNCTION verificarObstaculos (BEGIN)
0000 C0E0              PUSH    ACC
0002 C0D0              PUSH    PSW
0004 75D000            MOV     PSW,#00H
0007 C000              PUSH    AR0
0009 C004              PUSH    AR4
000B C005              PUSH    AR5
000D C006              PUSH    AR6
000F C007              PUSH    AR7
                                           ; SOURCE LINE # 115
                                           ; SOURCE LINE # 118
0011 758C3C            MOV     TH0,#03CH
                                           ; SOURCE LINE # 119
0014 758AAF            MOV     TL0,#0AFH
                                           ; SOURCE LINE # 121
0017 D50009      R     DJNZ    TempoObstaculos,?C0017
                                           ; SOURCE LINE # 125
                                           ; SOURCE LINE # 126
                                           ; SOURCE LINE # 127
001A 120000      R     LCALL   verificarColisoes
                                           ; SOURCE LINE # 128
001D 850000      R     MOV     TempoObstaculos,DificuldadeAtual
                                           ; SOURCE LINE # 129
0020 120000      R     LCALL   moverObstaculos
                                           ; SOURCE LINE # 130
                                           ; SOURCE LINE # 131
0023         ?C0017:
0023 D007              POP     AR7
0025 D006              POP     AR6
0027 D005              POP     AR5
0029 D004              POP     AR4
002B D000              POP     AR0
002D D0D0              POP     PSW
C51 COMPILER V9.56.0.0   JOGO                                                              05/31/2017 09:40:12 PAGE 9   

002F D0E0              POP     ACC
0031 32                RETI    
             ; FUNCTION verificarObstaculos (END)

             ; FUNCTION varrerDisplay (BEGIN)
0000 C0E0              PUSH    ACC
0002 C0D0              PUSH    PSW
0004 75D000            MOV     PSW,#00H
0007 C000              PUSH    AR0
                                           ; SOURCE LINE # 135
                                           ; SOURCE LINE # 137
0009 7590FF            MOV     P1,#0FFH
                                           ; SOURCE LINE # 138
000C 7400        R     MOV     A,#LOW ImagemX
000E 2500        R     ADD     A,LinhaAtual
0010 F8                MOV     R0,A
0011 E6                MOV     A,@R0
0012 F5A0              MOV     P2,A
                                           ; SOURCE LINE # 139
0014 7400        R     MOV     A,#LOW ImagemY
0016 2500        R     ADD     A,LinhaAtual
0018 F8                MOV     R0,A
0019 E6                MOV     A,@R0
001A F590              MOV     P1,A
                                           ; SOURCE LINE # 140
001C 0500        R     INC     LinhaAtual
                                           ; SOURCE LINE # 142
001E E500        R     MOV     A,LinhaAtual
0020 B40703            CJNE    A,#07H,?C0019
                                           ; SOURCE LINE # 143
0023 750000      R     MOV     LinhaAtual,#00H
                                           ; SOURCE LINE # 144
0026         ?C0019:
0026 D000              POP     AR0
0028 D0D0              POP     PSW
002A D0E0              POP     ACC
002C 32                RETI    
             ; FUNCTION varrerDisplay (END)

             ; FUNCTION inicializarObstaculos (BEGIN)
                                           ; SOURCE LINE # 149
                                           ; SOURCE LINE # 150
                                           ; SOURCE LINE # 151
0000 E4                CLR     A
0001 F500        R     MOV     ObstaculosInicio,A
                                           ; SOURCE LINE # 152
0003 E500        R     MOV     A,NivelAtual
0005 14                DEC     A
0006 FF                MOV     R7,A
0007 020000      R     LJMP    _desenharNovaImagem
             ; FUNCTION inicializarObstaculos (END)

             ; FUNCTION inicializarJogador (BEGIN)
                                           ; SOURCE LINE # 157
                                           ; SOURCE LINE # 158
                                           ; SOURCE LINE # 159
0000 750004      R     MOV     ImagemX+06H,#04H
                                           ; SOURCE LINE # 160
0003 22                RET     
             ; FUNCTION inicializarJogador (END)

             ; FUNCTION ligarInterrupcoes (BEGIN)
C51 COMPILER V9.56.0.0   JOGO                                                              05/31/2017 09:40:12 PAGE 10  

                                           ; SOURCE LINE # 164
                                           ; SOURCE LINE # 165
                                           ; SOURCE LINE # 166
0000 758921            MOV     TMOD,#021H
                                           ; SOURCE LINE # 167
0003 758C3C            MOV     TH0,#03CH
                                           ; SOURCE LINE # 168
0006 758AAF            MOV     TL0,#0AFH
                                           ; SOURCE LINE # 169
0009 758D70            MOV     TH1,#070H
                                           ; SOURCE LINE # 170
000C 758B70            MOV     TL1,#070H
                                           ; SOURCE LINE # 171
000F E4                CLR     A
0010 F5B8              MOV     IP,A
                                           ; SOURCE LINE # 172
0012 75A88F            MOV     IE,#08FH
                                           ; SOURCE LINE # 173
0015 D288              SETB    IT0
                                           ; SOURCE LINE # 174
0017 D28A              SETB    IT1
                                           ; SOURCE LINE # 175
0019 D28C              SETB    TR0
                                           ; SOURCE LINE # 176
001B D28E              SETB    TR1
                                           ; SOURCE LINE # 177
001D F500        R     MOV     LinhaAtual,A
                                           ; SOURCE LINE # 178
001F D2B0              SETB    Input
                                           ; SOURCE LINE # 179
0021 22                RET     
             ; FUNCTION ligarInterrupcoes (END)

             ; FUNCTION desligarInterrupcoes (BEGIN)
                                           ; SOURCE LINE # 183
                                           ; SOURCE LINE # 184
                                           ; SOURCE LINE # 185
0000 C28C              CLR     TR0
                                           ; SOURCE LINE # 186
0002 22                RET     
             ; FUNCTION desligarInterrupcoes (END)

             ; FUNCTION gameOver (BEGIN)
                                           ; SOURCE LINE # 190
                                           ; SOURCE LINE # 191
                                           ; SOURCE LINE # 192
0000 7F05              MOV     R7,#05H
0002 120000      R     LCALL   _desenharNovaImagem
                                           ; SOURCE LINE # 193
0005 120000      R     LCALL   desligarInterrupcoes
                                           ; SOURCE LINE # 194
0008         ?C0024:
0008 80FE              SJMP    ?C0024
             ; FUNCTION gameOver (END)

             ; FUNCTION victory (BEGIN)
                                           ; SOURCE LINE # 199
                                           ; SOURCE LINE # 200
                                           ; SOURCE LINE # 201
0000 7F06              MOV     R7,#06H
0002 120000      R     LCALL   _desenharNovaImagem
                                           ; SOURCE LINE # 202
C51 COMPILER V9.56.0.0   JOGO                                                              05/31/2017 09:40:12 PAGE 11  

0005 120000      R     LCALL   desligarInterrupcoes
                                           ; SOURCE LINE # 203
0008         ?C0027:
0008 80FE              SJMP    ?C0027
             ; FUNCTION victory (END)

             ; FUNCTION L?0037 (BEGIN)
0000 7F00              MOV     R7,#00H
0002 7E00              MOV     R6,#00H
0004 7C41              MOV     R4,#041H
             ; FUNCTION _jogar (BEGIN)
                                           ; SOURCE LINE # 208
;---- Variable 'dificuldade' assigned to Register 'R4/R5/R6/R7' ----
                                           ; SOURCE LINE # 209
                                           ; SOURCE LINE # 211
0006 120000      E     LCALL   ?C?CASTF
0009 8F00        R     MOV     DificuldadeAtual,R7
                                           ; SOURCE LINE # 212
000B 850000      R     MOV     TempoObstaculos,DificuldadeAtual
                                           ; SOURCE LINE # 214
000E 120000      R     LCALL   inicializarJogador
                                           ; SOURCE LINE # 215
0011 120000      R     LCALL   inicializarObstaculos
0014         ?C0030:
                                           ; SOURCE LINE # 218
0014 E500        R     MOV     A,VidasRestantes
0016 6009              JZ      ?C0031
0018 C3                CLR     C
0019 E500        R     MOV     A,ObstaculosInicio
001B 6480              XRL     A,#080H
001D 9486              SUBB    A,#086H
001F 40F3              JC      ?C0030
0021         ?C0031:
                                           ; SOURCE LINE # 222
0021 E500        R     MOV     A,VidasRestantes
0023 6003              JZ      ?C0032
                                           ; SOURCE LINE # 223
                                           ; SOURCE LINE # 224
0025 0500        R     INC     NivelAtual
0027 22                RET     
                                           ; SOURCE LINE # 226
0028         ?C0032:
                                           ; SOURCE LINE # 230
0028 120000      R     LCALL   gameOver
                                           ; SOURCE LINE # 231
002B         ?C0033:
002B 22                RET     
             ; FUNCTION _jogar (END)

             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 237
                                           ; SOURCE LINE # 238
                                           ; SOURCE LINE # 239
0000 120000      R     LCALL   ligarInterrupcoes
                                           ; SOURCE LINE # 240
0003 750004      R     MOV     VidasRestantes,#04H
                                           ; SOURCE LINE # 242
0006 7DA0              MOV     R5,#0A0H
0008 120000      R     LCALL   L?0037
                                           ; SOURCE LINE # 243
000B 7D90              MOV     R5,#090H
000D 120000      R     LCALL   L?0037
C51 COMPILER V9.56.0.0   JOGO                                                              05/31/2017 09:40:12 PAGE 12  

                                           ; SOURCE LINE # 244
0010 7F00              MOV     R7,#00H
0012 7E00              MOV     R6,#00H
0014 7D70              MOV     R5,#070H
0016 7C41              MOV     R4,#041H
0018 120000      R     LCALL   _jogar
                                           ; SOURCE LINE # 245
001B 7F00              MOV     R7,#00H
001D 7E00              MOV     R6,#00H
001F 7D20              MOV     R5,#020H
0021 7C41              MOV     R4,#041H
0023 120000      R     LCALL   _jogar
                                           ; SOURCE LINE # 246
0026 7F00              MOV     R7,#00H
0028 7E00              MOV     R6,#00H
002A 7DE0              MOV     R5,#0E0H
002C 7C40              MOV     R4,#040H
002E 120000      R     LCALL   _jogar
                                           ; SOURCE LINE # 250
0031 020000      R     LJMP    victory
             ; FUNCTION main (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    408    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     62    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
